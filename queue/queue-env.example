# =============================================================================
# AI Web Automation Agent - Multi-Model Configuration
# =============================================================================

# Multi-Model AI Web Automation Environment Configuration
# Supports: Gemini 2.0 Flash (with context), Gemini 2.5 Preview, and ChatGPT 4o Mini

# ===== GEMINI CONFIGURATION =====
# Get your API key from: https://aistudio.google.com/app/apikey
GEMINI_API_KEY=your-gemini-api-key-here

# Gemini 2.0 Flash with Context Caching (Enhanced Performance)
GEMINI_2_0_MODEL=gemini-2.0-flash-exp
GEMINI_2_0_TEMPERATURE=0.1
GEMINI_2_0_MAX_OUTPUT_TOKENS=8192
GEMINI_2_0_USE_CONTEXT_CACHING=true
GEMINI_2_0_CACHE_TTL_HOURS=24

# Gemini 2.5 Preview (Latest Experimental Model)  
GEMINI_2_5_MODEL=gemini-2.5-flash-exp
GEMINI_2_5_TEMPERATURE=0.1
GEMINI_2_5_MAX_OUTPUT_TOKENS=8192
GEMINI_2_5_USE_CONTEXT_CACHING=false

# ===== OPENAI CONFIGURATION =====
# Get your API key from: https://platform.openai.com/api-keys
OPENAI_API_KEY=your-openai-api-key-here
OPENAI_MODEL=gpt-4o-mini
OPENAI_TEMPERATURE=0.1
OPENAI_MAX_TOKENS=4000

# ===== DEFAULT MODEL SELECTION =====
# Set which model to use by default: gemini-2.0-flash, gemini-2.5-preview, or gpt-4o-mini
DEFAULT_MODEL=gpt-4o-mini

# ===== SERVICE CONFIGURATION =====
WORKER_URL=http://localhost:8000
QUEUE_PORT=3002

# ===== DATABASE CONFIGURATION =====
# PostgreSQL connection
DB_HOST=localhost
DB_PORT=5432
DB_NAME=automation_db
DB_USER=automation_user
DB_PASSWORD=automation_password

# ===== REDIS CONFIGURATION =====
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=

# ===== PRODUCTION DEPLOYMENT =====
# Uncomment and configure for production
# CORS_ORIGINS=https://yourdomain.com,https://www.yourdomain.com
# NODE_ENV=production
# LOG_LEVEL=info

# ===== FEATURE FLAGS =====
# Enable/disable specific features
ENABLE_CHAT_MODE=true
ENABLE_MODEL_SELECTION=true
MAX_RETRY_ATTEMPTS=3

# Worker Configuration  
WORKER_URL=http://localhost:8000

# Database Configuration (Docker PostgreSQL)
DB_HOST=localhost
DB_PORT=5432
DB_NAME=ai_automation
DB_USER=automation_user
DB_PASSWORD=automation_password_2024

# Redis Configuration (Docker Redis)
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=redis_password_2024

# Server Configuration
PORT=3002
NODE_ENV=development

# Rate Limiting & Performance
MAX_REQUESTS_PER_MINUTE=100
MAX_CONCURRENT_JOBS=5
REQUEST_TIMEOUT_MS=30000
WEBSITE_FETCH_TIMEOUT_MS=15000
MAX_WEBSITE_CONTENT_SIZE_MB=5

# Security
SESSION_SECRET=your_session_secret_here_minimum_32_chars
ALLOWED_ORIGINS=http://localhost:3000,http://localhost:3001,http://localhost:3002

# Logging Configuration
LOG_LEVEL=info
LOG_FILE=automation.log
LOG_MAX_SIZE=10mb
LOG_MAX_FILES=5

# =============================================================================
# Docker Production Configuration
# =============================================================================

# Production Database (when using Docker Compose)
# DB_HOST=postgres
# DB_PORT=5432
# DB_NAME=ai_automation_prod
# DB_USER=automation_user
# DB_PASSWORD=your_strong_password_here

# Production Redis (when using Docker Compose)
# REDIS_HOST=redis
# REDIS_PORT=6379
# REDIS_PASSWORD=your_redis_password_here

# Production Gemini Configuration
# GEMINI_API_KEY=your_production_gemini_api_key
# GEMINI_2_0_MODEL=gemini-2.0-flash-exp
# GEMINI_2_5_MODEL=gemini-2.5-flash-exp
# DEFAULT_MODEL=gpt-4o-mini

# Production Worker
# WORKER_URL=http://selenium-worker:8000

# Production Server
# PORT=3002
# NODE_ENV=production
# SESSION_SECRET=your_production_session_secret_minimum_32_chars

# SSL/TLS Configuration (Production)
# SSL_CERT_PATH=/etc/ssl/certs/fullchain.pem
# SSL_KEY_PATH=/etc/ssl/private/privkey.pem
# FORCE_HTTPS=true

# =============================================================================
# Development & Testing Configuration
# =============================================================================

# Development Overrides
# DEFAULT_MODEL=gemini-2.0-flash
# LOG_LEVEL=debug
# NODE_ENV=development

# Testing Configuration
# TEST_DB_NAME=ai_automation_test
# TEST_REDIS_DB=1
# SKIP_AUTH=true

# =============================================================================
# Optional Features
# =============================================================================

# Email Notifications (optional)
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_USER=your_email@gmail.com
# SMTP_PASS=your_app_password
# SMTP_FROM=AI Automation <noreply@yourdomain.com>

# Webhook Notifications (optional)
# WEBHOOK_URL=https://your-webhook-endpoint.com/automation
# WEBHOOK_SECRET=your_webhook_secret

# File Storage (optional - for screenshots/artifacts)
# STORAGE_TYPE=local
# STORAGE_PATH=./storage
# STORAGE_MAX_SIZE_MB=100

# Monitoring & Analytics (optional)
# SENTRY_DSN=your_sentry_dsn_here
# ANALYTICS_ENABLED=false

# =============================================================================
# Security Headers & CORS
# =============================================================================

# CORS Configuration
CORS_ORIGINS=http://localhost:3000,http://localhost:3001
CORS_CREDENTIALS=true
CORS_MAX_AGE=86400

# Security Headers
SECURITY_FRAME_OPTIONS=DENY
SECURITY_CONTENT_TYPE_OPTIONS=nosniff
SECURITY_XSS_PROTECTION=1; mode=block
SECURITY_HSTS_MAX_AGE=31536000

# =============================================================================
# Context Caching Configuration (Gemini 2.0 Flash)
# =============================================================================

# Context caching reduces API costs and improves performance
# by caching website content and common prompts (only for Gemini 2.0 Flash)

# Cache Configuration
CONTEXT_CACHE_ENABLED=true
CONTEXT_CACHE_MAX_SIZE=1000
CONTEXT_CACHE_TTL_MINUTES=1440
CONTEXT_CACHE_CLEANUP_INTERVAL_MINUTES=60

# Website Content Caching
WEBSITE_CACHE_ENABLED=true
WEBSITE_CACHE_MAX_SIZE=500
WEBSITE_CACHE_TTL_MINUTES=60

# =============================================================================
# Production Deployment Checklist
# =============================================================================

# Before deploying to production, ensure:
# 
# 1. ✅ Set strong GEMINI_API_KEY
# 2. ✅ Set secure DB_PASSWORD and REDIS_PASSWORD
# 3. ✅ Set unique SESSION_SECRET (32+ characters)
# 4. ✅ Configure SSL certificates
# 5. ✅ Set NODE_ENV=production
# 6. ✅ Configure proper CORS_ORIGINS
# 7. ✅ Set up monitoring (Sentry, etc.)
# 8. ✅ Configure backup strategy
# 9. ✅ Set up log rotation
# 10. ✅ Test all endpoints in staging
# 11. ✅ Configure firewall rules
# 12. ✅ Set up health checks
# 13. ✅ Configure environment-specific API quotas
# 14. ✅ Set DEFAULT_MODEL for production use 