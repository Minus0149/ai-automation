version: "3.8"

services:
  # ===========================================
  # Frontend Service (Next.js)
  # ===========================================
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ai-automation-frontend
    environment:
      - NODE_ENV=production
      - WORKER_URL=http://worker:8000
    ports:
      - "3000:3000"
    depends_on:
      - worker
    restart: unless-stopped
    networks:
      - automation-network

  # ===========================================
  # Worker Service (Python FastAPI)
  # ===========================================
  worker:
    build:
      context: ./worker
      dockerfile: Dockerfile
    container_name: ai-automation-worker
    environment:
      # AI Model Configuration
      - AI_MODEL_PROVIDER=${AI_MODEL_PROVIDER:-openai}
      - AI_MODEL_NAME=${AI_MODEL_NAME:-gpt-3.5-turbo}

      # API Keys
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - HUGGINGFACE_API_TOKEN=${HUGGINGFACE_API_TOKEN}

      # LangChain Configuration
      - LANGCHAIN_TRACING_V2=${LANGCHAIN_TRACING_V2:-false}
      - LANGCHAIN_API_KEY=${LANGCHAIN_API_KEY}
      - LANGCHAIN_PROJECT=${LANGCHAIN_PROJECT:-selenium-automation}

      # Worker Configuration
      - WORKER_PORT=8000
      - WORKER_HOST=0.0.0.0

      # Selenium Configuration
      - SELENIUM_HEADLESS=true
      - SELENIUM_TIMEOUT=60

      # Automation Configuration
      - DEFAULT_FRAMEWORK=selenium
      - MAX_EXECUTION_TIME=300
      - SCREENSHOT_ON_ERROR=true
    ports:
      - "8000:8000"
    volumes:
      - ./worker/screenshots:/app/screenshots
      - ./generated_projects:/app/generated_projects
    restart: unless-stopped
    networks:
      - automation-network

  # ===========================================
  # ChromaDB for Vector Storage (Optional)
  # ===========================================
  chromadb:
    image: chromadb/chroma:latest
    container_name: ai-automation-chromadb
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_PORT=8001
    ports:
      - "8001:8001"
    volumes:
      - chromadb_data:/chroma/chroma
    restart: unless-stopped
    networks:
      - automation-network

# ===========================================
# Persistent Data Volumes
# ===========================================
volumes:
  chromadb_data:
    name: ai_automation_chromadb_data
    driver: local

# ===========================================
# Docker Network Configuration
# ===========================================
networks:
  automation-network:
    name: ai_automation_network
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
# ===========================================
# Environment Configuration
# ===========================================
#
# Create a .env file with your API keys:
#
# # AI Model Configuration
# AI_MODEL_PROVIDER=openai
# AI_MODEL_NAME=gpt-3.5-turbo
#
# # API Keys
# OPENAI_API_KEY=your_openai_api_key_here
# ANTHROPIC_API_KEY=your_anthropic_api_key_here
# GOOGLE_API_KEY=your_google_api_key_here
# HUGGINGFACE_API_TOKEN=your_huggingface_token_here
#
# # LangChain Configuration (Optional)
# LANGCHAIN_TRACING_V2=true
# LANGCHAIN_API_KEY=your_langchain_api_key_here
# LANGCHAIN_PROJECT=selenium-automation
#
# ===========================================
